result-view {
	match: Game (this)
	
	conversation-drivers {
		conversation-driver {
			template (New Game)
		}
		conversation-driver {
			template (Give Up)
		}
	}

	refresh {
		if (this.incorrectGuesses == 6 ||  this.message == 'Congratulations, you win!') {
			spec {
				delay-seconds (this.startFlag)
				with-request {
					if (this.startFlag == 0) {
						intent {
							goal: FetchGame
						}
					} else {
						intent {
							goal: UpdateGame
						}
					}
				}
			}
		}
	}
	
	render {
		layout {
			section {
				content {
					if (this.incorrectGuesses == 6 ||  this.message == 'Congratulations, you win!') {
						paragraph {
							value ("New game starting in #{value(this.startFlag)} seconds")
						}
					}
					if (this.incorrectGuesses == 6) {
						paragraph {
							value ("#{value(this.answer)}")
							style (Detail_L)
						}
					} else {
						paragraph {
							value ("#{value(this.template)}")
							style (Detail_L)
						}
					}
					image {
						url ("#{value(this.image)}")
						aspect-ratio (TwentyOne_Nine)
						lightbox-enabled (false)
						object-fit (Contain)
					}
					if (exists(this.incorrectLetters)) {
						paragraph {
							value ("Incorrect letters: #{value(this.incorrectLetters)}")
							style (Detail_M)
						}
					}
					single-line {
						text {
							value ("Correct Guesses: #{value(correctGuesses)}")
							style (Detail_M)
						}
					}
					single-line {
						text {
							value ("Incorrect Guesses: #{value(incorrectGuesses)} / 6")
							style (Detail_M)
						}
					}
					single-line {
						text {
							value ("Category: #{value(this.category)}")
							style (Detail_M)
						}
					}
					if (exists(this.hints)) {
						hbox {
							content {
								vbox {
									content {
										single-line {
											text {
												value (" ‏‏‎ ")
												style (Detail_M)
											}
										}
									}
								}
								vbox {
									halign (Center)
									content {
										single-line {
											text {
												value (Hints)
												style (Detail_M)
											}
										}
									}
								}
								vbox {
									content {
										single-line {
											text {
												value (" ‏‏‎ ")
												style (Detail_M)
											}
										}
									}
								}
							}
						}
					}
					for-each (this.hints) {
						as (hint) {
							paragraph {
								value ("• #{value(hint)}\n")
								style (Detail_M)
							}
						}
					}
				}
			}
		}
	}
}